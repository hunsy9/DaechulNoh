<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.cloudcomputing.nodaechul.lecture.domain.repository.mapper.LectureMapper">
  <insert id="createLecture"
    parameterType="com.cloudcomputing.nodaechul.lecture.domain.model.dto.CreateLectureRequestDto"
    useGeneratedKeys="true" keyProperty="id">
    INSERT INTO lecture
    VALUES (0, #{name}, #{invitation_code}, #{created_by}, now(), now());
  </insert>

  <select id="inviteLecture"
    parameterType="long">
    SELECT invitation_code
    FROM lecture
    WHERE id = #{id};
  </select>

  <select id="getStudentInLectureById" parameterType="Long" resultType="com.cloudcomputing.nodaechul.lecture.domain.model.dto.StudentAttendanceDto">
    SELECT u.id, u.student_id, u.name, u.avatar, u.avatar_url
    FROM lecture_user l
    JOIN user u ON u.id = l.user_id
    WHERE l.lecture_id = #{lectureId} AND u.user_role != "Admin"
  </select>

  <select id="getLectureCollectionId" parameterType="Long" resultType="String">
    SELECT invitation_code FROM lecture WHERE id = #{id}
  </select>

  <select id="isLectureNameExists" resultType="boolean" parameterType="string">
    SELECT EXISTS (SELECT 1 FROM lecture WHERE name = #{name});
  </select>

  <select id="isLectureIdExists" resultType="boolean" parameterType="long">
    SELECT EXISTS (SELECT 1 FROM lecture WHERE id = #{id});
  </select>

  <insert id="joinLecture"
    parameterType="com.cloudcomputing.nodaechul.lecture.domain.model.dto.JoinLectureRequestDto">
    INSERT INTO lecture_user
    VALUES (#{user_id}, #{lecture_id}, now(), now());
  </insert>

  <select id="alreadyJoined" resultType="boolean"
    parameterType="com.cloudcomputing.nodaechul.lecture.domain.model.dto.JoinLectureRequestDto">
    SELECT EXISTS (SELECT 1
                   FROM lecture_user
                   WHERE user_id = #{user_id}
                     AND lecture_id = #{lecture_id});
  </select>

  <select id="getLectureInfo" resultType="com.cloudcomputing.nodaechul.lecture.domain.model.dto.JoinLectureResponseDto"
    parameterType="com.cloudcomputing.nodaechul.lecture.domain.model.dto.JoinLectureRequestDto">
    SELECT id, name, created_by
    FROM lecture
    WHERE id = #{lecture_id};
  </select>

  <select id="checkInvitationCode" resultType="string"
    parameterType="com.cloudcomputing.nodaechul.lecture.domain.model.dto.JoinLectureRequestDto">
    SELECT invitation_code
    FROM lecture
    WHERE id = #{lecture_id};
  </select>

  <select id="getLecturesByUserID"
    resultType="com.cloudcomputing.nodaechul.lecture.domain.model.dto.GetLectureRequestDto"
    parameterType="long">
    SELECT id, name, created_by
    FROM lecture
    WHERE id IN (SELECT lecture_id FROM lecture_user WHERE user_id = #{userId});
  </select>

  <select id="getAttendanceByLectureId"
    resultType="com.cloudcomputing.nodaechul.lecture.domain.model.dto.AttendanceDto"
    parameterType="long">
    SELECT id, `date`
    FROM attendance
    WHERE lecture_id = #{lectureId};
  </select>

  <select id="getMembersByLectureID"
    resultType="com.cloudcomputing.nodaechul.lecture.domain.model.dto.GetStudentAttendanceDto"
    parameterType="long">
    SELECT student_id, name, avatar, avatar_url
    FROM user
    WHERE user_role = "User"
      AND id IN (SELECT user_id FROM lecture_user WHERE lecture_id = #{lectureId});
  </select>

  <select id="getLectureIdByInvitationCode"
    resultType="long"
    parameterType="com.cloudcomputing.nodaechul.lecture.domain.model.dto.JoinLectureRequestDto">
    SELECT id
    FROM lecture
    WHERE invitation_code = #{invitation_code};
  </select>

  <select id="getProfessorNameByCreatedBy"
    resultType="String"
    parameterType="com.cloudcomputing.nodaechul.lecture.domain.model.dto.JoinLectureResponseDto">
    SELECT name
    FROM user
    WHERE id = #{created_by};
  </select>

  <insert id="joinLectureProfessor"
    parameterType="HashMap">
    INSERT INTO lecture_user
    VALUES (#{professorId}, #{lectureId}, now(), now());
  </insert>

</mapper>
